[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentic-talkdoc"
version = "0.1.0"
description = "Specialty-agnostic, multi-tenant agentic healthcare platform"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "TalkDoc Team", email = "engineering@talkdoc.com"}
]
keywords = ["healthcare", "AI", "agents", "telehealth", "multi-tenant"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Healthcare Industry",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
]

dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.32.0",
    "motor>=3.6.0",
    "redis>=5.2.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.2",
    "python-jose[cryptography]>=3.3.0",
    "passlib[argon2]>=1.7.4",
    "langgraph>=0.2.45",
    "langchain>=0.3.7",
    "langchain-openai>=0.2.9",
    "langchain-anthropic>=0.2.4",
    "boto3>=1.35.50",
    "mangum>=0.18.0",
    "pendulum>=3.0.0",
    "structlog>=24.4.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-asyncio>=0.24.0",
    "pytest-cov>=6.0.0",
    "black>=24.10.0",
    "ruff>=0.7.3",
    "mypy>=1.13.0",
    "pre-commit>=4.0.1",
    "faker>=30.8.2",
]

[project.urls]
Homepage = "https://talkdoc.com"
Documentation = "https://docs.talkdoc.com"
Repository = "https://github.com/talkdoc/agentic-talkdoc"

[tool.setuptools.packages.find]
where = ["."]
include = ["platform_core*", "agents*"]

[tool.black]
line-length = 100
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py312"
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
plugins = ["pydantic.mypy"]

[[tool.mypy.overrides]]
module = [
    "motor.*",
    "boto3.*",
    "langchain.*",
    "langgraph.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --strict-markers --asyncio-mode=auto"
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["platform_core", "agents"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
